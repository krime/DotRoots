############################################################################### 
# Copyright (C) 1999-2013, SYSU Supercomputing Keylab, all rights reserved
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
##############################################################################
### 
# @file           .tmux.conf
# @brief          Customize configuration for tmux
# @author         Krime Lam<krimelam@gmail.com>
# @version        v1.0.0.150818
# @date           Tue 18 Aug 2015 09:54:51 AM HKT
# @copyright      Copyright (C) 2011-2015, Touna.cn, SHenzhen Investment Financial Services Co.,Ltd., all rights reserved
###

# setw is short for set-window-option
# set is short for set-option
# bind is short for bind-key
# splitw is short for split-window
# selectw is short for select-window
# killw is short for kill-window
# swapp is short for swap-pane

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set -g status-bg colour236 #base02
set -g status-fg colour250 #yellow
set -g status-attr default

# default window title colors
setw -g window-status-fg colour244 #base0
setw -g window-status-bg default
#set-window-option -g window-status-attr dim
setw -g window-status-attr bright

# active window title colors
setw -g window-status-current-fg colour255 #orange
setw -g window-status-current-bg default
setw -g window-status-current-attr bright
#setw -g window-status-current-attr dim

# pane border
set -g pane-border-fg colour255 #base02
set -g pane-active-border-fg colour250 #base01

# message text
set -g message-fg colour220 #orange
set -g message-bg colour20 #base02
set -g message-attr bright

# pane number display
set -g display-panes-active-colour colour220 #blue
set -g display-panes-colour colour33 #orange
# clock
setw -g clock-mode-colour colour46 #green
setw -g clock-mode-style 24 #

# lock
set-option -g lock-server on
set-option -g lock-after-time 1800
set-option -g lock-command vlock

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
#set -g status-left '#[fg=colour246,bright,bg=colour20] #h #[fg=black,bg=default] #[fg=green,bright]#(uname -o) #(uname -i) #(uname -r | cut -c 1-6)#[default]'
#set -g status-left '#[fg=green,bright,bg=colour22] #(uname -o) #[fg=colour246,bright,bg=colour233] #h #[default]'
set -g status-left '#[fg=colour87,bright,bg=colour20] #(uname -o) #[fg=colour226,bright,bg=colour58] #h #[default]'
set -g status-right '#[fg=colour220,bright,bg=colour58]#(tmux-mem-cpu-load -i 1) #(cut -d" " -f1-3 /proc/loadavg) #[fg=colour240,bright,bg=colour20] #(uptime | cut -f4-5 -d" " | cut -f1 -d",") #[fg=white]%a %I:%M:%S %p #[fg=colour220]%y-%m-%d '

# enable wm (e.g. fluxbox) window titles:
set -g set-titles on
set -g set-titles-string "tmux:#I [ #W ]"

# C-b is not acceptable -- Vim uses it
# set-option -g prefix C-a
unbind C-b
set -g prefix C-M-w

bind C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind a send-prefix

# Activity monitoring
set -g visual-activity on
setw -g monitor-activity on

# Vi copypaste mode
setw -g mode-keys vi
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Vi style split windows
unbind '"'
bind v splitw -h
unbind %
bind s splitw -v

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind H resize-pane -L 10
bind J resize-pane -D 10
bind K resize-pane -U 10
bind L resize-pane -R 10
bind M-h resize-pane -L 5
bind M-j resize-pane -D 5
bind M-k resize-pane -U 5
bind M-l resize-pane -R 5
bind C-h resize-pane -L 15
bind C-j resize-pane -D 15
bind C-k resize-pane -U 15
bind C-l resize-pane -R 15
bind C-M-h resize-pane -L 20
bind C-M-j resize-pane -D 20
bind C-M-k resize-pane -U 20
bind C-M-l resize-pane -R 20

# Maximize and restore a pane
unbind Up
bind Up neww -d -n tmp \; swapp -s tmp \; selectw -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp \; killw -t tmp

# swap between windows
bind C-u swapp -U
bind C-d swapp -D

# set to main-horizontal, 60% height for main pane
bind m setw main-pane-height 60\; select-layout main-horizontal

bind C command-prompt -p "Name of new window: " "neww -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
setw -g automatic-rename

# rm mouse mode fail
set -g mode-mouse off

# basic global settings:
set -g default-shell /bin/bash
set -g status-keys vi
#setw -g mode-keys emacs
setw -g utf8 on
#setw -g mode-mouse on
#set -g mouse-select-pane on
# color
set -g default-terminal "screen-256color"

# status bar
set -g status-utf8 on

# history
set -g history-limit 1000000

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.

# from powerline
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell '[$TMUX_VERSION_MAJOR -gt 1 -o \( $TMUX_VERSION_MAJOR -eq 1 -a $TMUX_VERSION_MINOR -ge 8 \)]' 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
